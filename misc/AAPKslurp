#!/bin/sh
# SPDX-License-Identifier: GPL-3.0-only
# Copyright (C) 2022 Dimitar Yurukov <mscalindt@protonmail.com>

fErr_red() {
    [ -d "$TMP_DIR" ] && rm -rf "$TMP_DIR"
    _rc="$1"; shift
    printf "%b[%s] =>>: %b%s%b\n" '\033[1;31m' "$(date "+%H:%M:%S")" \
                                  '\033[1;37m' "$*" '\033[0m' 1>&2
    exit "$_rc"
}

info_blue() {
    printf "%b[%s] =>>: %b%s%b\n" '\033[1;34m' "$(date "+%H:%M:%S")" \
                                  '\033[1;37m' "$*" '\033[0m'
}

info_green() {
    printf "%b[%s] =>>: %b%s%b\n" '\033[1;32m' "$(date "+%H:%M:%S")" \
                                  '\033[1;37m' "$*" '\033[0m'
}

info_white() {
    printf "%b[%s] =>>: %b%s%b\n" '\033[1;37m' "$(date "+%H:%M:%S")" \
                                  '\033[1;37m' "$*" '\033[0m'
}

info_yellow() {
    printf "%b[%s] =>>: %b%s%b\n" '\033[1;33m' "$(date "+%H:%M:%S")" \
                                  '\033[1;37m' "$*" '\033[0m'
}

raw_list() {
    APK_LIST=$(adb shell pm list packages -f)
    APK_LIST=$(
        printf "%s\n" "$APK_LIST" | while IFS= read -r LINE; do
            PKG_NAME="${LINE##*=}"
            LINE="$PKG_NAME ${LINE#????????}"
            printf "%s\n" "${LINE%?"$PKG_NAME"}"
        done
    )
}

_argc_with() {
    _old_ifs="$IFS"; IFS="$1"

    set -f; case "$2" in
        *"$IFS") set -- $2; _count=$# ;;
        *) set -- $2; _count=$(($# - 1)) ;;
    esac; set +f

    IFS="$_old_ifs"
}

main() {
    export LC_ALL=C
    IFS="$(printf " \t\n")"; export IFS
    TMP_DIR=
    LF='
'
    op_done() { info_green 'Done! (｡◕‿◕｡)'; }
    command -v date > /dev/null 2>&1 || date() { return; } # bruh

    command -v adb > /dev/null 2>&1 || fErr_red 127 'adb not installed.'
    adb shell echo > /dev/null 2>&1 || fErr_red 127 'adb shell not available.'

    info_blue 'Building raw APK list (pm list packages -f)'
    raw_list || fErr_red "$?" 'we got error. unlucky. ¯\_(ツ)_/¯'
    op_done;

    if [ "$1" = list ]; then
        APK_LIST=$(
            printf "%s\n" "$APK_LIST" | while read -r PKG_NAME APK; do
                [ "$PKG_NAME" = android ] && continue
                printf "%s\n" "$PKG_NAME"
            done | sort
        )

        printf "%s\n" "$APK_LIST"
        _argc_with "$LF" "$APK_LIST"; _count=$((_count + 1)) # +1 to count the final apk which has no newline
        info_white "($_count/$((_count + 1))); excl. 'android'"
        op_done;
    elif [ "$1" = list-wlabel ]; then
        command -v aapt > /dev/null 2>&1 || fErr_red 127 'aapt not installed.'
        TMP_DIR="${TMPDIR:-/tmp}/666apkz"
        [ -d "$TMP_DIR" ] && { info_yellow "Are you doing something naughty?! Does '$TMP_DIR' remind you of something? ò_ó"; rm -rf "$TMP_DIR"; }
        mkdir "$TMP_DIR" || fErr_red "$?" 'Creation of temporary directory failed. ò_ó'
        hash adb aapt cat > /dev/null 2>&1
        cd "$TMP_DIR" || err "$?" 'TMP_DIR problems... ò_ó'

        APK_LIST=$(
            printf "%s\n" "$APK_LIST" | while read -r PKG_NAME APK; do
                [ "$PKG_NAME" = android ] && continue
                printf "%s %s\n" "$PKG_NAME" "$APK"
            done | sort
        )

        _argc_with "$LF" "$APK_LIST"; _count=$((_count + 1)) # +1 to count the final apk which has no newline

        i=0; while read -r PKG_NAME APK; do
            i=$((i + 1))
            adb exec-out cat "$APK" > a.apk || fErr_red "$?" "Failed cat: '$PKG_NAME'!"
            aapt dump badging a.apk 2> /dev/null | { while read -r LINE; do
                case "$LINE" in
                    'application-label:'*)
                        flag=1
                        LINE="${LINE%?}"
                        printf "%s >> %s\n" "$PKG_NAME" "${LINE#application-label:\'}"
                        break
                    ;;
                    *)
                        flag=0
                        continue
                    ;;
                esac
            done; [ "$flag" -eq 0 ] && printf "%s >> %s\n" "$PKG_NAME" "$PKG_NAME"; } # android apps with no name (no 'application-label') have their pkg name as their label
        done <<EOF
$APK_LIST
EOF

        info_white "($i/$((_count + 1))); excl. 'android'"
        rm -rf "$TMP_DIR"
        op_done;
    elif [ "$1" = list-sysonly ]; then
        : # TODO
    elif [ "$1" = list-sysonly-wlabel ]; then
        : # TODO
    elif [ "$1" ]; then
        fErr_red 2 'specify valid op. fast. ò_ó'
    else
        fErr_red 2 'specify op. fast. ò_ó'
    fi
}

# list
# list-wlabel
# list-sysonly
# list-sysonly-wlabel
main "$@"
